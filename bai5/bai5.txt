import sys

def get(x1, y1, x2, y2, s):
    return s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1]

def bs1(y1, y2, x1, x2, s):
    l, r = y1, y2 - 1
    res = 10 ** 18
    total_sum = get(x1, y1, x2, y2, s)
    while l <= r:
        mid = (l + r) // 2
        val = get(x1, y1, x2, mid, s)
        res = min(res, abs(total_sum - 2 * val))
        if total_sum - 2 * val > 0:
            l = mid + 1
        else:
            r = mid - 1
    return res

def bs2(x1, x2, y1, y2, s):
    l, r = x1, x2 - 1
    res = 10 ** 18
    total_sum = get(x1, y1, x2, y2, s)
    while l <= r:
        mid = (l + r) // 2
        val = get(x1, y1, mid, y2, s)
        res = min(res, abs(total_sum - 2 * val))
        if total_sum - 2 * val > 0:
            l = mid + 1
        else:
            r = mid - 1
    return res

def main():
    n, m, k = map(int, input().split())
    s = [[0] * (m + 1) for _ in range(n + 1)]
    
    for i in range(1, n + 1):
        row = list(map(int, input().split()))
        for j in range(1, m + 1):
            s[i][j] = s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1] + row[j - 1]
    
    for _ in range(k):
        x1, y1, x2, y2 = map(int, input().split())
        print(min(bs1(y1, y2, x1, x2, s), bs2(x1, x2, y1, y2, s)))
      
main()
